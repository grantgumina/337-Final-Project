// $Id: $
// File name:   rx_sr.sv
// Created:     2/16/2013
// Author:      Michael Welling
// Lab Section: 337-03
// Version:     1.0  Initial Design Entry
// Description: Recieving shift register

module rx_sr(
	input wire clk,
	input wire n_rst,
	input wire sda_in,
	input wire rising_edge_found,
	input wire rx_enable,
	output wire [7:0] rx_data
);

reg [7:0] curr_val;
reg [7:0] nxt_val;

assign rx_data = nxt_val;

always @ (negedge n_rst, posedge clk) begin : REG_LOGIC
	if(n_rst == 1'b0) begin
		curr_val <= 8'b11111111;	// Reset all data bits to the idle line value
	end else begin
		curr_val <= nxt_val;
	end
end

always @ (sda_in, rising_edge_found, rx_enable, curr_val) begin : NXT_LOGIC
	nxt_val <= curr_val;
		
	if(1'b1 == rising_edge_found && rx_enable == 1'b1) begin
		nxt_val <= {curr_val[6:0],sda_in}; // Shift in the serial data LSB first
	end
end

endmodule
